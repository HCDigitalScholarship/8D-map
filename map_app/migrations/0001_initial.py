# Generated by Django 2.0.5 on 2018-07-05 19:06

import ckeditor.fields
import ckeditor_uploader.fields
from django.db import migrations, models
import djgeojson.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AreaOfInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='General categories of interest, such as education, human rights or sustainable agriculture.', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='HaverfordOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name of office on campus that maintains this partnership.', max_length=200)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name of the partner organization.', max_length=200)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('website', models.URLField(blank=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', djgeojson.fields.PointField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('area_of_interest', models.ManyToManyField(blank=True, to='map_app.AreaOfInterest')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=200)),
                ('last_name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=200)),
                ('profile', ckeditor.fields.RichTextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Relevant academic disciplines or majors', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfOpportunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='partnersite',
            name='contact',
            field=models.ManyToManyField(blank=True, to='map_app.Person'),
        ),
        migrations.AddField(
            model_name='partnersite',
            name='haverford_office',
            field=models.ManyToManyField(blank=True, to='map_app.HaverfordOffice'),
        ),
        migrations.AddField(
            model_name='partnersite',
            name='keywords',
            field=models.ManyToManyField(blank=True, to='map_app.Keyword'),
        ),
        migrations.AddField(
            model_name='partnersite',
            name='language',
            field=models.ManyToManyField(blank=True, to='map_app.Language'),
        ),
        migrations.AddField(
            model_name='partnersite',
            name='organization',
            field=models.ManyToManyField(blank=True, to='map_app.PartnerOrganization'),
        ),
        migrations.AddField(
            model_name='partnersite',
            name='region',
            field=models.ManyToManyField(blank=True, to='map_app.Region'),
        ),
        migrations.AddField(
            model_name='partnersite',
            name='subject',
            field=models.ManyToManyField(blank=True, to='map_app.Subject'),
        ),
        migrations.AddField(
            model_name='partnersite',
            name='type_of_opportunity',
            field=models.ManyToManyField(blank=True, to='map_app.TypeOfOpportunity'),
        ),
        migrations.AddField(
            model_name='partnerorganization',
            name='contact',
            field=models.ManyToManyField(blank=True, to='map_app.Person'),
        ),
        migrations.AddField(
            model_name='partnerorganization',
            name='sites',
            field=models.ManyToManyField(blank=True, to='map_app.PartnerSite'),
        ),
    ]
